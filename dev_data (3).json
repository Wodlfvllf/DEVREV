[
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 during the last sprint",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 7'}, {'argument_name': 'start_date', 'argument_value': '2021-04-05'}, {'argument_name': 'end_date', 'argument_value': '2021-04-19'}, {'argument_name': 'capacity', 'argument_value': 40}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-04-05'}, {'argument_name': 'end_date', 'argument_value': '2021-04-19'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2020-01-01 and 2020-12-31",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2020-01-01'}, {'argument_name': 'end_date', 'argument_value': '2020-12-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug report' with a description and assign it to user2 with high priority",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug report'}, {'argument_name': 'description', 'argument_value': 'This work item is a bug report for a critical issue.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for the user with ID: 1234",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': ''}, {'argument_name': 'role', 'argument_value': ''}, {'argument_name': 'resource', 'argument_value': ''}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-04-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-04-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule an urgent team meeting with members from teams Sales, Marketing and Support",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Urgent team meeting'}, {'argument_name': 'team_members', 'argument_value': ['Sales', 'Marketing', 'Support']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named Sprint 1 with start date April 1st and end date April 14th, and a capacity of 10 hours",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': 'April 1st'}, {'argument_name': 'end_date', 'argument_value': 'April 14th'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze risks in project XYZ",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'risk_type': 'organizational', 'risk_description': 'Poor communication among team members', 'impact': 'medium'}, {'risk_type': 'project', 'risk_description': 'Insufficient testing', 'impact': 'high'}, {'risk_type': 'technical', 'risk_description': 'Vulnerability in third-party library', 'impact': 'critical'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': '$$PREV[0]'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the estimated effort for completing work items created by user1 and user2 within the given date range.",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': ['user1', 'user2']}, {'argument_name': 'work_type', 'argument_value': ['ticket']}]}, {'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a comprehensive risk assessment report for Project XYZ",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'project': 'Project XYZ', 'risk': 'Data security breach', 'probability': 'medium', 'impact': 'high'}, {'project': 'Project XYZ', 'risk': 'Scope creep', 'probability': 'high', 'impact': 'medium'}, {'project': 'Project XYZ', 'risk': 'Vendor failure', 'probability': 'low', 'impact': 'high'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'comprehensive'}, {'argument_name': 'project_name', 'argument_value': 'Project XYZ'}, {'argument_name': 'risk_assessment_results', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of a work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for the changes made in the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss project progress'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Mary', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '15:00'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items for user John Doe from October 1st to October 31st",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'October 1st'}, {'argument_name': 'end_date', 'argument_value': 'October 31st'}, {'argument_name': 'user_id', 'argument_value': 'John Doe'}, {'argument_name': 'work_type', 'argument_value': 'task'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the 'sample_project' codebase with specific metrics and defined thresholds",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'sample_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'unit_test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 20, 'unit_test_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the project ProjectABC",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'ProjectABC'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the list of high priority work items for the next sprint",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 2'}, {'argument_name': 'start_date', 'argument_value': '2021-08-01'}, {'argument_name': 'end_date', 'argument_value': '2021-08-15'}, {'argument_name': 'capacity', 'argument_value': 50}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['title', 'type', 'priority']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[1]'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[1]'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in feature X'}, {'argument_name': 'description', 'argument_value': 'There is an issue with feature X and it needs to be fixed before the next sprint'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[4]'}, {'argument_name': 'fields', 'argument_value': ['title', 'type', 'priority']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for high priority issue with the title 'Critical Bug'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Critical Bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': ''}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 12345 to user123",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a critical issue reported by user2",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Critical issue reported by user2'}, {'argument_name': 'description', 'argument_value': 'A critical issue has been reported by user2 and requires immediate attention.'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 'task123' to user 'johnsmith'",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'task123'}, {'argument_name': 'assignee_id', 'argument_value': 'johnsmith'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the user with ID 12345",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Ticket'}, {'argument_name': 'description', 'argument_value': 'This is a new ticket for user with ID 12345'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item #123 to user #456",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'assignee_id', 'argument_value': '456'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically notify stakeholders about the completed deployment of version 1.2.3 for the project ABC",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This release includes bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['PM', 'QA', 'DevOps']}, {'argument_name': 'notify_on_completion', 'argument_value': 'True'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path 'C:/Users/User/project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/User/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['lines_of_code', 'cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'lines_of_code': 10000, 'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for ticket TCKT-1234 from 01/01/2021 to 03/01/2021",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'TCKT-1234'}, {'argument_name': 'from_date', 'argument_value': '01/01/2021'}, {'argument_name': 'to_date', 'argument_value': '03/01/2021'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 20, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and automate deployment",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_records', 'financial_data', 'employee_information']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['deploy_customer_records.py', 'deploy_financial_data.py', 'deploy_employee_information.py']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders of a comprehensive security audit on the codebase",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project X",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project X'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['coverage', 'complexity', 'bugs']}, {'argument_name': 'thresholds', 'argument_value': {'coverage': 80, 'complexity': 10, 'bugs': 0}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get work history of work item 1234",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a meeting to discuss project progress and goals",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project progress and goals discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob', 'Alice']}, {'argument_name': 'preferred_time', 'argument_value': '09:00'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': 'Project progress and goals discussion'}, {'argument_name': 'notification_list', 'argument_value': ['John', 'Jane', 'Bob', 'Alice']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'Project progress and goals discussion'}, {'argument_name': 'fields', 'argument_value': ['project_progress', 'goals']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Add login feature'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Add login feature'}, {'argument_name': 'description', 'argument_value': 'This work item will add a login feature for users to access the application.'}, {'argument_name': 'type', 'argument_value': 'feature'}, {'argument_name': 'priority', 'argument_value': 'medium'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a bug found in production",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug found in production'}, {'argument_name': 'description', 'argument_value': 'A bug was found in the production environment that needs to be addressed immediately.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'production_team'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug Fix' with description 'Fixes the bug reported by user2' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fixes the bug reported by user2'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the effort required to complete a work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the roles of user user123 for the resource resource1 in the scope scope1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user123'}, {'argument_name': 'scope', 'argument_value': 'scope1'}, {'argument_name': 'resource', 'argument_value': 'resource1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'my_repository' assigned to developers 'John' and 'Mary' since 2021-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repository'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Mary']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about upcoming release for version version1",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'version1'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug fix' with priority 'high' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get permissions for user1 in scope1:team1 for resource1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'scope1'}, {'argument_name': 'role', 'argument_value': 'team1'}, {'argument_name': 'resource', 'argument_value': 'resource1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 within the scope of project A",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project A'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 1234",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'author', 'description', 'status', 'type', 'created_on', 'updated_on', 'comments']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'coverage', 'maintainability']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'coverage': 80, 'maintainability': 'A'}}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'Fixed bugs and added new features'}}, {'argument_name': 'notification_list', 'argument_value': ['team_lead', 'product_manager', 'quality_assurance']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path '/home/projects/my_project' and generate a report with the 'cyclomatic complexity' and 'code duplication' metrics",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/projects/my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'January 1, 2021'}, {'argument_name': 'end_date', 'argument_value': 'December 31, 2021'}, {'argument_name': 'user_id', 'argument_value': 'user_123'}, {'argument_name': 'work_type', 'argument_value': 'code quality'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items worked on by employee with ID 123",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'work_type', 'argument_value': 'work'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of the ticket TCKT-001 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'TCKT-001'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get comments for the work item with ID 1234",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for the user with ID 123",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New high priority work item'}, {'argument_name': 'description', 'argument_value': 'This is a new high priority work item'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify relevant stakeholders about the deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3'}}, {'argument_name': 'notification_list', 'argument_value': ['team1', 'team2', 'team3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve details and history of a specific work item",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'created_by', 'assigned_to']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Perform security audit on the codebase",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Samantha', 'Michael']}, {'argument_name': 'preferred_time', 'argument_value': '2021-09-01 10:00'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for the release version 3.2.1",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '3.2.1'}]}, {'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Release 3.2.1'}, {'argument_name': 'description', 'argument_value': 'Release version 3.2.1'}, {'argument_name': 'type', 'argument_value': ['release']}, {'argument_name': 'priority', 'argument_value': ['high']}, {'argument_name': 'assignee_id', 'argument_value': ['dev.team']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since the date 2021-01-01 and assign them to developers 'John' and 'Mary'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Mary']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking issues or requests",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Issue'}, {'argument_name': 'description', 'argument_value': 'This is a new issue that needs to be addressed'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate report on code quality of repository XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication rate', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 0.05, 'coverage': 0.8}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'metrics', 'argument_value': '$$PREV[0]'}, {'argument_name': 'report_type', 'argument_value': 'full'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify the team about the upcoming release",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'release'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['team', 'managers', 'developers']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint called 'Sprint 1' starting from 01/01/2021, ending on 01/15/2021 with capacity 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '01/01/2021'}, {'argument_name': 'end_date', 'argument_value': '01/15/2021'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 123",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve user permissions for user with ID 123 in the scope of project ABC",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'scope', 'argument_value': 'project ABC'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'work123'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'work123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 123 to 'In Progress' and notify relevant stakeholders",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['teamlead', 'projectmanager', 'qualityassurance']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database xyz",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'xyz'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments from ticket with ID 12345 from 01-01-2021 to 31-01-2021 and limit to 10",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '01-01-2021'}, {'argument_name': 'to_date', 'argument_value': '31-01-2021'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a work report for user2's work items from the last month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '1 month ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user2'}, {'argument_name': 'work_type', 'argument_value': 'work items'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for the customer XYZ Corporation",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Work Item for XYZ Corporation'}, {'argument_name': 'description', 'argument_value': 'This is a new work item for the customer XYZ Corporation'}, {'argument_name': 'type', 'argument_value': 'Task'}, {'argument_name': 'priority', 'argument_value': 'High'}, {'argument_name': 'assignee_id', 'argument_value': 'XYZ Corporation'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the repository 'projectx'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'projectx'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'my-project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my-project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of a new software version to the testing environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'testing'}]}, {'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['software_version_1.1', 'testing_environment']}, {'argument_name': 'start_date', 'argument_value': '2021-06-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-05'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with id '123'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assigned_to']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 5}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get details of work item 123",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve work item comments and history for ticket123",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'ticket123'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'ticket123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for my_project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 'low'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate the team's backlog",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'team1'}, {'argument_name': 'scope', 'argument_value': 'team'}, {'argument_name': 'role', 'argument_value': 'member'}, {'argument_name': 'resource', 'argument_value': 'work_items'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'fields', 'argument_value': ['$$PREV[0].fields']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a work report for user1 from 01-01-2021 to 31-01-2021",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '01-01-2021'}, {'argument_name': 'end_date', 'argument_value': '31-01-2021'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': ''}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/projects/XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_coverage', 'cyclomatic_complexity']}, {'argument_name': 'thresholds', 'argument_value': {'code_coverage': 80, 'cyclomatic_complexity': 10}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get permissions of user John for the project XYZ",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'John'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'XYZ'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess and categorize the risks associated with Project A",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': 'Project A'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Resolve dependencies in project XYZ using latest versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID work123 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'work123'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get comments of ticket with ID 1234 from 2020-01-01 to 2020-12-31 with a maximum of 50 comments",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '1234'}, {'argument_name': 'from_date', 'argument_value': '2020-01-01'}, {'argument_name': 'to_date', 'argument_value': '2020-12-31'}, {'argument_name': 'limit', 'argument_value': 50}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /path/to/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of a specific ticket and notify stakeholders",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'TICKET-123'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the estimated effort for completing work item 1234",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '1234'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'effort'}, {'argument_name': 'work_item_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for repository my_repo",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['developer1', 'developer2', 'developer3']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug fix' with description 'Fix the bug in the login system' and assign it to user1 with priority high",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login system'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments and details of work item with ID '12345'",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['comments']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for a specific codebase",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'https://github.com/SuperUser/codebase'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'security vulnerabilities']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'security vulnerabilities': 'low'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'market_trend_analyzer'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'get_work_item_comments'}, {'argument_name': 'assignee_id', 'argument_value': 'team_lead'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss market trends for technology industry'}, {'argument_name': 'team_members', 'argument_value': ['team_lead', 'data_analyst', 'sales_manager']}, {'argument_name': 'preferred_time', 'argument_value': 'next Monday at 10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve work item comments for work item with ID 1234",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path 'myproject'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'myproject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code churn']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 0.5, 'code churn': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete a specific work item",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'workitem123'}]}, {'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment for the production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': []}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item - don:core:dvrv-us-1:devo/0:issue/1",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the security audit report for codebase 'my-project'",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my-project'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in the database mydb",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'mydb'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data on a weekly basis",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * 0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze customer feedback for our new product",
        "answers": [
            "[{'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': ['New product feedback']}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.5}, {'argument_name': 'topic_modeling', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug fix' with a description 'Fix issue reported by customer' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix issue reported by customer'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 123 to user1 and update its status to 'in progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'status', 'argument_value': 'in progress'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create new work item with title 'Update dependencies' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Update dependencies'}, {'argument_name': 'description', 'argument_value': 'This work item is to update dependencies in the project.'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the security audit of the codebase",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'security_audit'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a critical issue",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Critical Issue'}, {'argument_name': 'description', 'argument_value': 'This ticket is for tracking a critical issue that needs immediate attention.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Bug Fix' and description 'Fix the bug in the login process'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login process'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since January 1st, 2021 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': 'January 1st, 2021'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['created_by', 'created_date']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'manager' for the resource 'work_item'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}, {'argument_name': 'resource', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items with the name 'Sprint 1' and a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the 'sales' database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01, and assign them to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the code quality of the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'code_quality'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'report_data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 123 to user1",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login page'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that prevents users from logging in.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'maintainability', 'test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'maintainability': 80, 'test_coverage': 90}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'market trends'}, {'argument_name': 'data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for ticket with ID 12345 from 2021-01-01 to 2021-02-01",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-02-01'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the estimated effort for work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of tickets created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-06-30'}, {'argument_name': 'limit', 'argument_value': '100'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'maintainability', 'test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'maintainability': 80, 'test_coverage': 90}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug Fix' and description 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug Fix' with a description 'Fix the bug in the login feature' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the codebase at path 'C:/Users/JohnDoe/Documents/Codebase'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/JohnDoe/Documents/Codebase'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'code_quality_metrics'}, {'argument_name': 'fields', 'argument_value': ['average']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '$$PREV[0]'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login page' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-15 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 12345 to user JohnDoe",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': 'JohnDoe'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug Fix' with description 'Fix the bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with title 'Bug in login functionality' and description 'Users are unable to login' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'Users are unable to login'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project1' and role 'developer' on the resource 'work_item'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project1'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for ticket with ID 12345 from 2021-01-01 to 2021-02-01",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-02-01'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. It keeps showing an error message.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-15 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Task'}, {'argument_name': 'description', 'argument_value': 'This is a new task created for user2'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically assign high priority bugs to user1",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': '$$PREV[0]'}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user JohnDoe",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': 'JohnDoe'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'project1' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'project1'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 on the 'admin' scope and 'manager' role",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'admin'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 12345 and expand its description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['*']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'ProjectX'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the sales forecast for the next quarter",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'sales_forecast'}, {'argument_name': 'fields', 'argument_value': ['historical_sales_data', 'forecast_period']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0].historical_sales_data'}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 for the scope 'project' and role 'developer' on the resource 'task'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'task'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project XYZ",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'User is unable to login to the system'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the project Project1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'user'}, {'argument_name': 'resource', 'argument_value': 'Project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-15 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': '80%'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5, 'coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix the bug causing the application to crash'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug causing the application to crash'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'admin' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'admin'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-14 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the release timeline for product version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': '$$PREV[0]'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss release timeline for product version 2.0'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the project 'ProjectA' and the role 'Developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'ProjectA'}, {'argument_name': 'role', 'argument_value': 'Developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'ticket'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'User is unable to login to the system'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the codebase at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of tickets created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-06-30'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    }
]