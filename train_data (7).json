[
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. Please help.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['all']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the new project",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss the new project'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the latest version of the project dependencies and update them in the project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}, {'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login page' and description 'There is a bug in the login page that prevents users from logging in'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that prevents users from logging in'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the database named 'sales'",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in the production environment",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'production'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the release of version 2.0",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Release Meeting'}, {'argument_name': 'description', 'argument_value': 'Meeting to discuss the release of version 2.0'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'team_lead'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Release Meeting'}, {'argument_name': 'team_members', 'argument_value': ['team_lead', 'developer1', 'developer2', 'tester1', 'tester2']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from the last 7 days",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '7 days ago'}, {'argument_name': 'to_date', 'argument_value': 'now'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This release includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments for work item 12345 and notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This is a test deployment'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data from the production environment",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': [{'name': 'customer_data', 'type': 'object', 'description': 'Data related to customers'}, {'name': 'financial_data', 'type': 'object', 'description': 'Data related to financial transactions'}]}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This is a major release'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high priority bugs reported by user1 in the last month",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'bug_reports'}, {'argument_name': 'role', 'argument_value': 'reporter'}, {'argument_name': 'resource', 'argument_value': 'priority_levels'}]}, {'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': '$$PREV[0]'}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'last month'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'bugs'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the latest market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'latest_trends'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item with the title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'fields', 'argument_value': ['title', 'assignee_id']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_info', 'financial_records', 'employee_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the estimated effort for the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the production database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'production'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix the bug reported by customer' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug reported by customer'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item #12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of ticket with ID 12345 and retrieve its comments from the last week",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'from_date', 'argument_value': 'last week'}, {'argument_name': 'to_date', 'argument_value': 'today'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Conduct a comprehensive security audit on the codebase and notify stakeholders upon completion",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'created'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with the title 'Bug in login page' and assign it to user with ID 'user123'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login page'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login page where users are unable to login.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of version 2.0 to production environment and notify stakeholders",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['version 2.0']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess the risks associated with the project 'Project X' and notify stakeholders if the risk tolerance is low",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'risk_name': 'Budget overrun', 'risk_description': 'The project may exceed the allocated budget', 'likelihood': 'high', 'impact': 'high'}, {'risk_name': 'Resource shortage', 'risk_description': 'There may not be enough resources to complete the project on time', 'likelihood': 'medium', 'impact': 'high'}, {'risk_name': 'Scope creep', 'risk_description': 'The project requirements may change frequently', 'likelihood': 'high', 'impact': 'medium'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'low'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Fixed bugs and added new features'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345 and assign it to user with ID 67890",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items for user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_info', 'sales_data', 'financial_records']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the repository 'my_repo' and generate a list of code reviews for the changes made since 2021-01-01",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_repo'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5}}]}, {'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for the project 'my_project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the software",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in software'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the software that needs to be fixed.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'JohnDoe'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user with ID 123 for the scope 'project' and role 'manager'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the new feature implementation",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss new feature implementation'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items with the name 'Sprint 1' and a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of software to production environment using deployment automation manager",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Automated deployment to production'}, {'argument_name': 'description', 'argument_value': 'Automated deployment of software to production environment using deployment automation manager'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/codebase'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code coverage': 80}}]}, {'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': [{'month': 'Jan', 'sales': 1000}, {'month': 'Feb', 'sales': 1200}, {'month': 'Mar', 'sales': 1500}]}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically triage high priority bugs reported by user1",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5, 'coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project using latest versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix the bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of project XYZ to production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'path/to/project/XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the project",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in project'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the project that needs to be fixed.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss project progress'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user with ID 1234 for the scope 'project' and role 'developer' on the resource 'task'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'task'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the customer feedback system",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in Customer Feedback System'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the customer feedback system that is causing incorrect data to be displayed.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'customer_feedback_system'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'bug_tracking'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-14 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_smells', 'duplicated_lines']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_smells': 5, 'duplicated_lines': 100}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Task for ProjectX'}, {'argument_name': 'description', 'argument_value': 'This task is a high priority task for ProjectX'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the history of changes made to work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the release of version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Release Meeting'}, {'argument_name': 'description', 'argument_value': 'Discuss the release of version 2.0'}, {'argument_name': 'type', 'argument_value': 'meeting'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'team_lead'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Release Meeting'}, {'argument_name': 'team_members', 'argument_value': ['team_lead', 'developer1', 'developer2', 'tester1', 'tester2']}, {'argument_name': 'preferred_time', 'argument_value': '2:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user with ID 1234 for the scope 'project' and role 'manager'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 12345 and create a new sprint named 'Sprint 1' with a capacity of 10",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['all']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items with the name 'Sprint 1'",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high risk projects for the next quarter",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[0]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'high'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss high risk projects for next quarter'}, {'argument_name': 'team_members', 'argument_value': ['risk_manager', 'project_manager', 'team_lead']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '01/01/2021'}, {'argument_name': 'end_date', 'argument_value': '03/31/2021'}, {'argument_name': 'user_id', 'argument_value': 'risk_manager'}, {'argument_name': 'work_type', 'argument_value': 'project'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update project dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a backup schedule for critical data and notify stakeholders upon completion",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical_data_1', 'critical_data_2', 'critical_data_3']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item 12345 and create a new sprint named 'Sprint 1' with a capacity of 10",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-08-01'}, {'argument_name': 'end_date', 'argument_value': '2021-08-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update project dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of the ticket with ID 12345 from 2021-01-01 to 2021-01-31 with a limit of 10",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the 'admin' role in the 'project' scope",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'admin'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This version includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment and notify stakeholders",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate the deployment of a new feature to the production environment",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'PROD-123'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['$$PREV[0].deployment_script']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].work_id'}, {'argument_name': 'status', 'argument_value': 'deployed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Map the customer journey for the customer with ID 12345",
        "answers": [
            "[{'tool_name': 'customer_journey_mapper', 'arguments': [{'argument_name': 'customer_data', 'argument_value': [{'id': '12345', 'name': 'John Doe', 'interactions': ['website visit', 'email open', 'phone call']}]}, {'argument_name': 'journey_stages', 'argument_value': ['awareness', 'consideration', 'purchase', 'loyalty']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority ticket for the user with ID 12345",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New High Priority Ticket'}, {'argument_name': 'description', 'argument_value': 'This is a new ticket that requires immediate attention.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix critical bug' and assign it to user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login functionality' and description 'There is a bug in the login functionality that needs to be fixed' and assign it to user with ID '12345'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login page' and description 'There is a bug in the login page that needs to be fixed' and type 'bug' and priority 'high' and assignee_id 'user1'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that needs to be fixed'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss project progress'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}, {'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Project Progress Meeting'}, {'argument_name': 'description', 'argument_value': 'Meeting to discuss the progress of the project'}, {'argument_name': 'type', 'argument_value': 'meeting'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'team_lead'}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Project Progress Meeting'}, {'argument_name': 'description', 'argument_value': 'Meeting to discuss the progress of the project'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'team_lead'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with title 'Bug in login page' and description 'Users unable to login' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login page'}, {'argument_name': 'description', 'argument_value': 'Users unable to login'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'ProjectX'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}, {'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[0]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login page' and description 'There is a bug in the login page that needs to be fixed'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that needs to be fixed'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with start date '2021-01-01', end date '2021-01-15', and capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a critical issue with title 'Server Down' and description 'The server is currently down and needs immediate attention'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Server Down'}, {'argument_name': 'description', 'argument_value': 'The server is currently down and needs immediate attention'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'admin'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login functionality where users are unable to login to their accounts.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from the last 7 days",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '7 days ago'}, {'argument_name': 'to_date', 'argument_value': 'today'}, {'argument_name': 'limit', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'market trends'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This version includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the codebase and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the progress of the project",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss project progress'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Project Progress Meeting'}, {'argument_name': 'description', 'argument_value': 'Meeting to discuss the progress of the project'}, {'argument_name': 'priority', 'argument_value': 'High'}, {'argument_name': 'assignee_id', 'argument_value': '$$PREV[0].team_members'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of version 1.2.3 to production environment and notify stakeholders",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['deploy_v1.2.3.py']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['team_lead', 'product_manager', 'qa_lead']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the upcoming release",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discussing the upcoming release'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob', 'Alice']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 and notify stakeholders",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '$$PREV[0]', 'release_notes': '$$PREV[1]'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete a new ticket for tracking issues or requests",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Ticket'}, {'argument_name': 'description', 'argument_value': 'This is a new ticket for tracking issues or requests'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-31 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login functionality where users are unable to login.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a high priority issue reported by user1",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'High Priority Issue'}, {'argument_name': 'description', 'argument_value': 'Issue reported by user1'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high priority bugs reported by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'bug'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically triage high priority bugs reported by user1",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': '$$PREV[0]'}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login page' and description 'There is a bug in the login page that prevents users from logging in'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that prevents users from logging in'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the database 'sales'",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get all comments from ticket with ID 12345",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-12-31'}, {'argument_name': 'limit', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item with ID 12345 and assign it to user with ID 67890",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details and comments of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assigned_to']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess and categorize risks associated with project1",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': 'project1'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and role 'manager'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the upcoming deployment",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss upcoming deployment'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'scope1' and role 'role1' on the resource 'resource1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'scope1'}, {'argument_name': 'role', 'argument_value': 'role1'}, {'argument_name': 'resource', 'argument_value': 'resource1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Predict the sales forecast for the next quarter",
        "answers": [
            "[{'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[1]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890 and retrieve the comments associated with it",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix the bug in the login feature' and assign it to user with ID 'user123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the deployment scripts for the production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': '$$PREV[0]'}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and the role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data from the customer database every day at 2 AM",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': [{'customer_database': 'critical_data'}]}, {'argument_name': 'backup_schedule', 'argument_value': '0 2 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for the user with ID 12345",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New High Priority Work Item'}, {'argument_name': 'description', 'argument_value': 'This is a new work item that needs to be completed urgently.'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project1' and the role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project1'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'scope1' and role 'role1' on the resource 'resource1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'scope1'}, {'argument_name': 'role', 'argument_value': 'role1'}, {'argument_name': 'resource', 'argument_value': 'resource1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix the bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments for the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and optimize database queries for better performance",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_info', 'sales_data', 'financial_records']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'company_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_info', 'sales_data', 'inventory']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix Bug' with description 'There is a bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix Bug'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 in the scope of project XYZ",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project XYZ'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. Please help.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the project 'Project X'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New ticket for Project X'}, {'argument_name': 'description', 'argument_value': 'This ticket is for tracking issues and requests related to Project X'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix Bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix Bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze the risk associated with the project 'Project X' with a risk tolerance of 'medium'",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'project': 'Project X', 'risk': 'high'}, {'project': 'Project X', 'risk': 'medium'}, {'project': 'Project X', 'risk': 'low'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Conduct a comprehensive security audit on the codebase and notify stakeholders upon completion",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the performance of the database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'performance'}, {'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data for the next release cycle",
        "answers": [
            "[{'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['critical data']}, {'argument_name': 'start_date', 'argument_value': 'next release cycle start date'}, {'argument_name': 'end_date', 'argument_value': 'next release cycle end date'}]}, {'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': '$$PREV[0]'}, {'argument_name': 'backup_schedule', 'argument_value': 'daily'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the codebase at path /home/user/project",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['security', 'performance', 'maintainability']}, {'argument_name': 'thresholds', 'argument_value': {'security': 'high', 'performance': 'medium', 'maintainability': 'low'}}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Security Audit Report for /home/user/project'}, {'argument_name': 'description', 'argument_value': 'A comprehensive security audit report has been generated for the codebase at path /home/user/project.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'security_team'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['deploy.sh', 'test.sh']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with start date '2021-01-01', end date '2021-01-15', and capacity 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_data', 'financial_records', 'employee_records']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze customer feedback for product version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}, {'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.5}, {'argument_name': 'topic_modeling', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for version 2.0 of the product",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates with team members John, Sarah, and Mike",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Mike']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update project dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project using latest versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess the risks associated with the project 'Project X' with a risk tolerance level of 'medium'",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': 'Project X'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'Users are unable to login to the system.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate the deployment of a new feature to the production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['feature_deployment_script.py']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New feature deployment'}, {'argument_name': 'description', 'argument_value': 'Automated deployment of new feature to production environment'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'deployment_team'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_items'}, {'argument_name': 'role', 'argument_value': 'contributor'}, {'argument_name': 'resource', 'argument_value': 'completed'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': 'John'}, {'argument_name': 'work_type', 'argument_value': 'code review'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since January 1st, 2021, assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. Please help.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a critical bug reported by user2",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['Critical bug reported by user2']}, {'argument_name': 'priority_levels', 'argument_value': ['critical']}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Critical bug reported by user2'}, {'argument_name': 'description', 'argument_value': 'A critical bug has been reported by user2 and needs to be addressed immediately.'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the sales forecast for the next quarter",
        "answers": [
            "[{'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'sales forecast'}, {'argument_name': 'data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug Fix' with description 'Fix the bug in the login feature' and assign it to user with ID 'user123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of version 2.0 to production environment and notify stakeholders",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['version 2.0']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item 12345 and generate a code review for the changes made.",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assigned_to']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectA'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2', 'user3']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project 'my_project' using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'my_project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a backup schedule for critical data",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_data', 'market_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 12345 with expanded description and revision 2",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['*']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user with ID 123 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project 'ProjectX' and generate a report for the past month",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'ProjectX'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'JohnDoe'}, {'argument_name': 'work_type', 'argument_value': 'code_review'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. Please help.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project 'my_project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since January 1st, 2021, assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix critical bug in production' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix critical bug in production'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign a new high priority work item to user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New High Priority Work Item'}, {'argument_name': 'description', 'argument_value': 'This is a new work item with high priority'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login functionality where users are unable to login after multiple attempts.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'admin' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'admin'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix critical bug' and assign it to user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of software to production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/ProjectX'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Conduct a comprehensive security audit on the codebase and notify stakeholders upon completion",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'User is unable to login to the system.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate backup and restore processes for critical data in the production environment",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical_data_1', 'critical_data_2', 'critical_data_3']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['backup_script.sh']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the estimated effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for project XYZ",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'admin'}, {'argument_name': 'work_type', 'argument_value': 'security'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for ticket with ID 12345 from 2021-01-01 to 2021-06-30 with a limit of 10",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-06-30'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for ticket 12345 from 2021-01-01 to 2021-02-01 with a limit of 10",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-02-01'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the market trends in the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discussion on market trends'}, {'argument_name': 'team_members', 'argument_value': ['team_member1', 'team_member2', 'team_member3']}, {'argument_name': 'preferred_time', 'argument_value': '3:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['assignee_id']}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '$$PREV[0].assignee_id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high priority bugs reported by user1 in the last month",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': '$$PREV[0]'}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'bug_reports'}, {'argument_name': 'role', 'argument_value': 'reporter'}, {'argument_name': 'resource', 'argument_value': 'bug'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'last month'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'bug'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_info', 'financial_records', 'employee_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code health']}, {'argument_name': 'thresholds', 'argument_value': {'code health': '80%'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data on a daily basis",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-15 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['comments']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Backup critical data and schedule automated backups",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['customer_data', 'feedback_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking issues or requests",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Ticket'}, {'argument_name': 'description', 'argument_value': 'This is a new ticket for tracking issues or requests'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of project XYZ to production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'XYZ'}, {'argument_name': 'assignee_id', 'argument_value': 'production_team'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a start date of '2021-01-01', an end date of '2021-01-14', and a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Resolve dependencies for project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the latest product release",
        "answers": [
            "[{'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['product release']}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'latest'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with start date '2021-01-01', end date '2021-01-15' and capacity '10'",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-09-01 and ending on 2021-09-15 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-09-01'}, {'argument_name': 'end_date', 'argument_value': '2021-09-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-14 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project 'my_project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix the bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the latest version of the product",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'latest'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user with ID 123 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID '12345'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug Fix' and description 'Fix the bug in the login feature' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments associated with the work item 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates with team members John, Sarah, and Mike",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Mike']}, {'argument_name': 'preferred_time', 'argument_value': '2:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Resolve dependencies for project 'my_project' using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'my_project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a release timeline for the upcoming product release",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Release Sprint'}, {'argument_name': 'start_date', 'argument_value': '2021-10-01'}, {'argument_name': 'end_date', 'argument_value': '2021-10-15'}, {'argument_name': 'capacity', 'argument_value': 100}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.0'}]}, {'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'start_date', 'argument_value': '$$PREV[0].end_date'}, {'argument_name': 'end_date', 'argument_value': '2021-10-31'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews for the repository 'projectX' since January 1st, 2021, assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': 'January 1st, 2021'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'January 1st, 2021'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': ['John', 'Jane']}, {'argument_name': 'work_type', 'argument_value': ['code review']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for version 2.0 of the product",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'admin' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'admin'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item 12345 and its history",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates with team members John, Sarah, and Mike",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Mike']}, {'argument_name': 'preferred_time', 'argument_value': '3:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 12345 and generate a report for it",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': '$$PREV[0].assignee'}, {'argument_name': 'work_type', 'argument_value': '$$PREV[0].status'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New High Priority Work Item'}, {'argument_name': 'description', 'argument_value': 'This is a new work item created for user2'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Bug Fix' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update project dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 12345 to user1",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Predict the sales forecast for the next quarter",
        "answers": [
            "[{'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project risks with the risk tolerance level of medium",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[0]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discussion on project risks'}, {'argument_name': 'team_members', 'argument_value': ['team_member1', 'team_member2', 'team_member3']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the project Project1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'user'}, {'argument_name': 'resource', 'argument_value': 'Project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve all comments from tickets created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-06-30'}, {'argument_name': 'limit', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix bug in login functionality' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate the backup and restore process for critical data",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': [{'name': 'customer_data', 'type': 'object', 'description': 'Data related to customers'}, {'name': 'financial_data', 'type': 'object', 'description': 'Data related to financial transactions'}]}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['backup_script.sh']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of ticket T12345 from 2021-01-01 to 2021-02-01 with a limit of 10",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'T12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-02-01'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the latest version of the project dependencies and update the project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'my_project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'my_project'}, {'argument_name': 'status', 'argument_value': 'updated'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project progress discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'John'}, {'argument_name': 'work_type', 'argument_value': 'project'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Resolve dependencies for project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a start date of '2021-01-01', an end date of '2021-01-15', and a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the history of changes made to work item 12345 and notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New ticket for ProjectX'}, {'argument_name': 'description', 'argument_value': 'This ticket is for tracking issues and requests related to ProjectX'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the codebase",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'security_audit'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'codebase', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Bug Fix' with description 'Fix the bug reported by customer' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug reported by customer'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of the ticket with ID 12345 from 2021-01-01 to 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path 'C:/Users/Project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/Project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the latest release",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in latest release'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the latest release that needs to be fixed.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews assigned to user1 since 2021-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'code review'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1' and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item titled 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': 'A critical bug that needs to be fixed immediately'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze customer feedback for the food industry with a sentiment threshold of 0.7",
        "answers": [
            "[{'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.7}, {'argument_name': 'topic_modeling', 'argument_value': True}]}, {'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'food'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a bug report with high priority and assign it to user1",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['Bug report description']}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New bug report ticket'}, {'argument_name': 'description', 'argument_value': 'Ticket for high priority bug report'}, {'argument_name': 'priority', 'argument_value': '$$PREV[0]'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Predict the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the customer journey mapping project",
        "answers": [
            "[{'tool_name': 'customer_journey_mapper', 'arguments': [{'argument_name': 'customer_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'journey_stages', 'argument_value': ['mapping']}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss customer journey mapping project'}, {'argument_name': 'team_members', 'argument_value': ['marketing', 'sales', 'customer service']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix the bug in the login feature'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug in the login feature'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews conducted by user1 in the past month",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'code_reviews'}, {'argument_name': 'role', 'argument_value': 'reviewer'}, {'argument_name': 'resource', 'argument_value': 'all'}]}, {'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'all'}, {'argument_name': 'since_date', 'argument_value': 'one month ago'}, {'argument_name': 'reviewers', 'argument_value': ['$$PREV[0].user_id']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'one month ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'code_reviews'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a capacity of 10 and start date of 2021-01-01 and end date of 2021-01-14",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a bug found in the project",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in project'}, {'argument_name': 'description', 'argument_value': 'A bug was found in the project and needs to be addressed.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}, {'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user2', 'user3']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user1 on the 'admin' scope and 'manager' role",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'admin'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890 and update its status to 'In Progress'",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details and history of work item 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assigned_to', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description', 'status', 'assignee', 'created_by', 'created_on', 'updated_by', 'updated_on']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a high priority issue reported by user1",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'High Priority Issue'}, {'argument_name': 'description', 'argument_value': 'Issue reported by user1'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This version includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the security audit of the codebase",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'security_audit'}, {'argument_name': 'audit_results', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of project XYZ to production environment",
        "answers": [
            "[{'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'production'}]}, {'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'path/to/project/XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'path/to/dependency/file'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies in project XYZ using the latest available versions",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.json'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 in the scope 'project' with the role 'developer' for the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code coverage': 80, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess the risks associated with project XYZ",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[0]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}, {'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'XYZ'}]}, {'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'XYZ Sprint'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': '100'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'XYZ'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': '10'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'XYZ'}, {'argument_name': 'status', 'argument_value': 'in progress'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'New features added'}}, {'argument_name': 'notification_list', 'argument_value': ['team1', 'team2', 'team3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 for the scope 'project' and role 'manager' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates with team members John, Sarah, and Mike",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Mike']}, {'argument_name': 'preferred_time', 'argument_value': '3:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This release includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'User is unable to login to the system.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login functionality where users are unable to login after multiple attempts.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user with ID 1234 for the scope 'project' and role 'developer' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically deploy the latest version of the project to the production environment",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'my_project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['deploy.py', 'run_tests.py']}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the sales forecast for the next quarter",
        "answers": [
            "[{'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'forecast_period', 'argument_value': 'next quarter'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'report_type', 'argument_value': 'sales forecast'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 on the project Project1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'Project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete the work item with ID 1234",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01, assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item #12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve comments for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the work item history for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and the role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project at /home/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress with team members John, Sarah, and Mike",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project Progress Discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Mike']}, {'argument_name': 'preferred_time', 'argument_value': '3:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project at path 'C:/Users/Project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/Project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a high priority issue assigned to user1",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New High Priority Issue'}, {'argument_name': 'description', 'argument_value': 'This is a new high priority issue that needs to be addressed immediately.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 on the scope 'project1' with the role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project1'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for fixing a critical bug",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': 'A critical bug has been reported and needs to be fixed immediately.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'developer1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 123 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID '1234' created by user 'John Doe' between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '1234'}]}, {'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '$$PREV[0].id'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'coverage': 80, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically backup critical data every day at 2 AM",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical_data']}, {'argument_name': 'backup_schedule', 'argument_value': '0 2 * * *'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and its history",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['all']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 0}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/projects/XYZ/codebase'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for a given codebase and generate release notes for the latest version",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/codebase'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'v2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bugs' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bugs'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 in the scope 'project' with the role 'developer' for the resource 'work_item'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and expand its description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the last month",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['completed_by', 'completed_date', 'status']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'last month'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews for repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': ['John', 'Jane']}, {'argument_name': 'work_type', 'argument_value': ['code review']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and role 'manager' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with title 'Fix bug in login form' and description 'Users are unable to login due to a bug' and priority 'high' and assign it to user with ID '12345'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login form'}, {'argument_name': 'description', 'argument_value': 'Users are unable to login due to a bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a work report for user1 for the month of August",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'August 1'}, {'argument_name': 'end_date', 'argument_value': 'August 31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path 'C:/Users/JohnDoe/Projects/MyProject' and notify stakeholders when done",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/JohnDoe/Projects/MyProject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code coverage': 80, 'code duplication': 5}}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates with team members John, Sarah, and Alex",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Sarah', 'Alex']}, {'argument_name': 'preferred_time', 'argument_value': '3:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project 'AwesomeProject'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/AwesomeProject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-02-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-02-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'ticket'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 with a high priority",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'status', 'argument_value': 'high'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'today'}, {'argument_name': 'end_date', 'argument_value': 'tomorrow'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'high'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the new product launch",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discussing the new product launch'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'created_by', 'created_on']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-03-31",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_items'}, {'argument_name': 'role', 'argument_value': 'assignee'}, {'argument_name': 'resource', 'argument_value': 'report'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-03-31'}, {'argument_name': 'user_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item 'don:core:dvrv-us-1:devo/0:issue/1' and analyze the sentiment using a threshold of 0.5",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}, {'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.5}, {'argument_name': 'topic_modeling', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bugs', description 'Fix all the bugs in the system', type 'bug', priority 'high', and assign it to user with ID 'user123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bugs'}, {'argument_name': 'description', 'argument_value': 'Fix all the bugs in the system'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This release includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of a specific ticket",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'TICKET123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'type', 'priority', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item titled 'Bug Fix' with description 'Fix the bug reported by customer' and assign it to user with ID '123'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix the bug reported by customer'}, {'argument_name': 'type', 'argument_value': ['bug']}, {'argument_name': 'priority', 'argument_value': ['high']}, {'argument_name': 'assignee_id', 'argument_value': ['123']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the work item history of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': ['work_item']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of the ticket with ID 12345 from the start of the year to the current date, limiting to 10 comments",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '01-01-2021'}, {'argument_name': 'to_date', 'argument_value': 'current_date'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This is a major release'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'created_by']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get user permissions for user1 in scope1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'scope1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-03-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-03-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically assign high priority bugs to a specific user",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['high priority bugs']}, {'argument_name': 'priority_levels', 'argument_value': ['high']}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'assignee_id', 'argument_value': 'specific user'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'admin' on resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'admin'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'ticket'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the code quality metrics for the project 'MyProject'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/projects/MyProject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' assigned to developers 'dev1' and 'dev2' since 2021-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Resolve dependencies in project X using the strict update strategy",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'X'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'strict'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'I am unable to login to my account. Please help.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the last month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'one month ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting on 2021-01-01 and ending on 2021-01-15 with a capacity of 50",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 50}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item for user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Work Item'}, {'argument_name': 'description', 'argument_value': 'This is a new work item created for user2'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze customer feedback for the month of June",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'from_date', 'argument_value': 'June 1st'}, {'argument_name': 'to_date', 'argument_value': 'June 30th'}, {'argument_name': 'limit', 'argument_value': 100}]}, {'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.5}, {'argument_name': 'topic_modeling', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-03-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-03-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product X",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user with ID 1234 for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'user'}, {'argument_name': 'resource', 'argument_value': 'ProjectX'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-02-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-02-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of all security vulnerabilities in the project",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'JSON'}, {'argument_name': 'notify_stakeholders', 'argument_value': False}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['vulnerabilities']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user with ID 1234 for the 'finance' scope and 'manager' role",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'finance'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Update UI' and assign it to user with ID 123",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Update UI'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'medium'}, {'argument_name': 'assignee_id', 'argument_value': '123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item 12345 and its history",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['all']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 0}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-02-01",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'fields', 'argument_value': ['assigned_to']}, {'argument_name': 'description', 'argument_value': [True]}, {'argument_name': 'revision', 'argument_value': [1]}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': ['2021-01-01']}, {'argument_name': 'end_date', 'argument_value': ['2021-02-01']}, {'argument_name': 'user_id', 'argument_value': ['user1']}, {'argument_name': 'work_type', 'argument_value': ['assigned']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}, {'argument_name': 'fields', 'argument_value': ['work_id', 'assignee_id', 'title', 'status', 'created_date']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-03-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-03-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the risk assessment report for project XYZ",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'project': 'XYZ', 'risks': ['low', 'medium', 'high']}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'risk_assessment'}, {'argument_name': 'report_data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze the code quality of the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_smells', 'security_rating']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_smells': 5, 'security_rating': 'A'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders.",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'dependencies.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2020-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2020-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a capacity of 50 and assign work item 'WI-123' to user 'John'",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 50}]}, {'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'WI-123'}, {'argument_name': 'assignee_id', 'argument_value': 'John'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_items'}, {'argument_name': 'role', 'argument_value': 'creator'}, {'argument_name': 'resource', 'argument_value': '2021-01-01:2021-01-31'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'created'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the market trends for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'industry_focus', 'argument_value': 'technology'}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'market_trends'}, {'argument_name': 'data', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority ticket for the issue reported by user1",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New issue reported by user1'}, {'argument_name': 'description', 'argument_value': 'Issue reported by user1 needs to be addressed urgently'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a capacity of 10 and notify stakeholders on completion",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Initial release'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project 'ProjectA'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'ProjectA'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_duplication', 'test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_duplication': 5, 'test_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a capacity of 10 and start date of 2021-05-01 and end date of 2021-05-14",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-05-01'}, {'argument_name': 'end_date', 'argument_value': '2021-05-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project' and role 'manager' on the resource 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'manager'}, {'argument_name': 'resource', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the codebase at path 'project/src'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project/src'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get all work items assigned to user1 and estimate the total effort required to complete them",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}]}, {'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This release includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for the codebase located at /home/user/project",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['security_score', 'vulnerability_count']}, {'argument_name': 'thresholds', 'argument_value': {'security_score': 90, 'vulnerability_count': 0}}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'v1.0'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': 'v1.0', 'release_notes': '$$PREV[2]'}}, {'argument_name': 'notification_list', 'argument_value': ['security_team', 'development_team']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'project1' since 2021-01-01 assigned to 'user1'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'project1'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items with the name 'Sprint 1'",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-09-01'}, {'argument_name': 'end_date', 'argument_value': '2021-09-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 'good'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named Sprint 1 with a capacity of 10 for the period from 2021-10-01 to 2021-10-15",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-10-01'}, {'argument_name': 'end_date', 'argument_value': '2021-10-15'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the backup schedule for customer data",
        "answers": [
            "[{'tool_name': 'customer_journey_mapper', 'arguments': [{'argument_name': 'customer_data', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': '$$PREV[0]'}, {'argument_name': 'backup_schedule', 'argument_value': '$$PREV[1]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 3}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['work_id', 'created_by', 'created_date']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'ticket'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path 'C:\\Users\\User\\project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:\\\\Users\\\\User\\\\project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'maintainability', 'test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'maintainability': 80, 'test_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 1234 to user1",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the last month",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}, {'argument_name': 'fields', 'argument_value': ['completed_date']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'last month'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for project ProjectA",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Work Item for ProjectA'}, {'argument_name': 'description', 'argument_value': 'This is a new work item created for ProjectA'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item W123 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'W123'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectA' since 2021-01-01 assigned to user1",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectA'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews for repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': ['user1', 'user2']}, {'argument_name': 'work_type', 'argument_value': ['code review']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' with a start date of '2021-01-01', end date of '2021-01-31', and a capacity of 10.",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['health']}, {'argument_name': 'thresholds', 'argument_value': {'health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average sales for the past year",
        "answers": [
            "[{'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': 'sales_data'}, {'argument_name': 'forecast_period', 'argument_value': '1 year'}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'sales_data'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average_sales']}, {'argument_name': 'thresholds', 'argument_value': {'average_sales': 100000}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2', 'user3']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'This version includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix critical bug' and assign it to user2",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of ticket 1234 from 2021-01-01 to 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '1234'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item with ID 12345 to user with ID 67890",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'assignee_id', 'argument_value': '67890'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze code quality of the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project_path'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_smells', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_smells': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items for user1 from 2021-01-01 to 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the release timeline for the upcoming product launch",
        "answers": [
            "[{'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['upcoming product launch']}, {'argument_name': 'start_date', 'argument_value': '2021-10-01'}, {'argument_name': 'end_date', 'argument_value': '2021-10-31'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss release timeline'}, {'argument_name': 'team_members', 'argument_value': ['team member 1', 'team member 2', 'team member 3']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 1234 from the last week",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '1234'}, {'argument_name': 'from_date', 'argument_value': 'last week'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix issue with login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix issue with login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the code quality of the project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'bugs', 'vulnerabilities', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'bugs': 5, 'vulnerabilities': 2, 'code_smells': 20}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'metrics', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item #12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the history of changes made to work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get all work items assigned to user1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_items'}, {'argument_name': 'role', 'argument_value': 'assignee'}, {'argument_name': 'resource', 'argument_value': 'all'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix issue with login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix issue with login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for the customer John Doe",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Work Item for John Doe'}, {'argument_name': 'description', 'argument_value': 'This work item is for the customer John Doe'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'John Doe'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with id 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee', 'created_by', 'created_date', 'modified_date']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 0}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'created_by', 'created_date', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for changes made in the repository 'my_repo' since 2021-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'security_audit_report'}]}, {'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['security_audit_report']}, {'argument_name': 'backup_schedule', 'argument_value': '0 0 * * *'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '01/01/2021'}, {'argument_name': 'end_date', 'argument_value': '01/31/2021'}, {'argument_name': 'user_id', 'argument_value': 'security_team'}, {'argument_name': 'work_type', 'argument_value': 'security_audit'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'security_audit_report'}, {'argument_name': 'fields', 'argument_value': ['report_format', 'notify_stakeholders']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'v2.0'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': 'v2.0', 'release_notes': 'Security audit report'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}, {'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'project': 'security_audit', 'risk': 'data breach'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'low'}]}, {'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'security_audit_report'}, {'argument_name': 'status', 'argument_value': 'completed'}]}, {'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'security_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}, {'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['Security audit report not generated', 'Data breach risk not assessed']}, {'argument_name': 'priority_levels', 'argument_value': ['high', 'medium']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the production database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'production_database'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.0.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.0.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of code reviews for the repository 'my_project' since January 1st, 2021 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': 'January 1st, 2021'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'January 1st, 2021'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': ['John', 'Jane']}, {'argument_name': 'work_type', 'argument_value': ['code review']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to user1",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new high priority work item with the title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': 'This work item is to fix a critical bug in the system.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['developer1', 'developer2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 1234",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a release timeline for version 2.0 of the product",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}, {'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the list of work items assigned to user1 and notify the assignee on completion",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'assigned'}, {'argument_name': 'role', 'argument_value': 'assignee'}, {'argument_name': 'resource', 'argument_value': 'work_item'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the code quality of the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'metrics', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2020-01-01 and 2020-12-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2020-01-01'}, {'argument_name': 'end_date', 'argument_value': '2020-12-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project updates",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project updates'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '2:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high priority work items for user2 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user2'}, {'argument_name': 'work_type', 'argument_value': 'high priority'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about upcoming deployment",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.0', 'release_notes': 'This release includes bug fixes and performance improvements.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the last month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'last month'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the backup schedule for critical data",
        "answers": [
            "[{'tool_name': 'backup_and_restore_manager', 'arguments': [{'argument_name': 'data_to_backup', 'argument_value': ['critical data']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code duplication': 5, 'code coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 in the scope 'project1'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate deployment of software to production environment",
        "answers": [
            "[{'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': 'production environment'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': '$$PREV[0]'}, {'argument_name': 'environment', 'argument_value': 'production'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from the last 7 days",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '7 days ago'}, {'argument_name': 'to_date', 'argument_value': 'now'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description', 'status', 'assigned_to']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'maintainability']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'maintainability': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 from 2021-01-01 to 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/path/to/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a critical bug in the project",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Critical bug in project'}, {'argument_name': 'description', 'argument_value': 'A critical bug has been found in the project that needs to be addressed immediately.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'developer1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the estimated effort for the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 123",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description', 'status', 'assignee', 'priority']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login form'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login form'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': ''}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug Fix' and description 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug Fix'}, {'argument_name': 'description', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description']}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze the risks associated with project1 with a risk tolerance of high",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': '$$PREV[0]'}, {'argument_name': 'risk_tolerance', 'argument_value': 'high'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].work_id'}, {'argument_name': 'fields', 'argument_value': ['risk', 'risk_level']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for user1 with title 'New Task' and description 'This is a new task'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Task'}, {'argument_name': 'description', 'argument_value': 'This is a new task'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'medium'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2020-01-01 and 2020-12-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2020-01-01'}, {'argument_name': 'end_date', 'argument_value': '2020-12-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user with ID 1234 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '1234'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-02-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-02-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'projectA' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectA'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item 1234",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and retrieve its comments",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['comments']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from 2021-01-01 to 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '2021-01-01'}, {'argument_name': 'to_date', 'argument_value': '2021-01-31'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Analyze customer feedback to identify common themes and areas for improvement",
        "answers": [
            "[{'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': ['customer1_feedback', 'customer2_feedback', 'customer3_feedback']}, {'argument_name': 'sentiment_threshold', 'argument_value': 0.5}, {'argument_name': 'topic_modeling', 'argument_value': True}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[1]'}, {'argument_name': 'fields', 'argument_value': ['description', 'priority']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}, {'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Customer Feedback Analysis'}, {'argument_name': 'description', 'argument_value': 'Results of customer feedback analysis and recommended improvements'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'team_member1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the scope 'project1' and role 'developer' on the resource 'codebase'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project1'}, {'argument_name': 'role', 'argument_value': 'developer'}, {'argument_name': 'resource', 'argument_value': 'codebase'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee', 'status', 'priority']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since the last month, assigned to developers John and Sarah",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': 'last month'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Sarah']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items with a capacity of 20",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'capacity', 'argument_value': 20}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'assignee', 'status', 'description']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-02-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-02-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'my_project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort required for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the scope 'project' and role 'developer'",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'project'}, {'argument_name': 'role', 'argument_value': 'developer'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345 and expand the description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the upcoming release",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discuss upcoming release'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_item'}, {'argument_name': 'role', 'argument_value': 'assignee'}, {'argument_name': 'resource', 'argument_value': 'report'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': '$$PREV[0].user_id'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments associated with work item 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 1234",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '1234'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'type', 'priority', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments for ticket TCKT-1234 from the last month and limit to 10 comments",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': 'TCKT-1234'}, {'argument_name': 'from_date', 'argument_value': 'last month'}, {'argument_name': 'to_date', 'argument_value': 'today'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication', 'code coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5, 'coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get user permissions for user1 in the Sales department",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'Sales'}, {'argument_name': 'role', 'argument_value': 'employee'}, {'argument_name': 'resource', 'argument_value': 'Sales'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-07-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-07-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'ticket'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'type', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'critical'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Unable to login'}, {'argument_name': 'description', 'argument_value': 'User is unable to login to the system'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from 01-01-2021 to 31-01-2021",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '01-01-2021'}, {'argument_name': 'to_date', 'argument_value': '31-01-2021'}, {'argument_name': 'limit', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for the project XYZ",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Work Item for Project XYZ'}, {'argument_name': 'description', 'argument_value': 'This is a new work item created for the project XYZ'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 12345 with expanded description and revision 2",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['*']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Bug fix' and description 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions for user with ID 123 for the 'admin' scope and 'manager' role on the 'users' resource",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': '123'}, {'argument_name': 'scope', 'argument_value': 'admin'}, {'argument_name': 'role', 'argument_value': 'manager'}, {'argument_name': 'resource', 'argument_value': 'users'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the history of changes made to work item don:core:dvrv-us-1:devo/0:issue/1",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['code_health']}, {'argument_name': 'thresholds', 'argument_value': {'code_health': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the code quality of the project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'maintainability', 'test_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'maintainability': 80, 'test_coverage': 90}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'metrics', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login page'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': ''}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get permissions for user1 on scope1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'scope1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix critical bug' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix critical bug'}, {'argument_name': 'description', 'argument_value': 'A critical bug that needs to be fixed immediately'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the average code quality metrics for the latest release",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': 'latest'}]}, {'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '$$PREV[0]'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 90}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectA' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectA'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 in the last month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 12345 and expand its description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss project progress",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Project progress discussion'}, {'argument_name': 'team_members', 'argument_value': ['John', 'Jane', 'Bob']}, {'argument_name': 'preferred_time', 'argument_value': '2:00 PM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since January 1st, 2021, assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login page' and description 'The login page is not working properly'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'The login page is not working properly'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of all work items created by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' assigned to developers 'user1' and 'user2' since 2021-01-01",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'New Feature' and description 'Add a new feature to the system'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New Feature'}, {'argument_name': 'description', 'argument_value': 'Add a new feature to the system'}, {'argument_name': 'type', 'argument_value': 'feature'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'projectX' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for changes made in the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with title 'Bug in login page'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login page'}, {'argument_name': 'description', 'argument_value': 'There seems to be a bug in the login page where users are unable to login.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments for the work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_ticket_details', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work_item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named 'Sprint 1' starting from '2021-01-01' and ending at '2021-01-15' with a capacity of 100",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-15'}, {'argument_name': 'capacity', 'argument_value': 100}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from the start of the year to the current date",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '01/01/2021'}, {'argument_name': 'to_date', 'argument_value': 'current_date'}, {'argument_name': 'limit', 'argument_value': '100'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project at path 'C:/Users/MyProject'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'C:/Users/MyProject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automate the deployment process for project XYZ in the development environment",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'risk_type': 'deployment', 'risk_description': 'Potential issues during deployment process'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'low'}]}, {'tool_name': 'deployment_automation_manager', 'arguments': [{'argument_name': 'deployment_scripts', 'argument_value': ['script1', 'script2', 'script3']}, {'argument_name': 'environment', 'argument_value': 'development'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bugs' and description 'Fix all known bugs in the system'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bugs'}, {'argument_name': 'description', 'argument_value': 'Fix all known bugs in the system'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'New Sprint'}, {'argument_name': 'start_date', 'argument_value': '2021-10-01'}, {'argument_name': 'end_date', 'argument_value': '2021-10-15'}, {'argument_name': 'capacity', 'argument_value': 50}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].sprint_id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'assigned'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments and history of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named Sprint 5 with a capacity of 20 for managing work items",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 5'}, {'argument_name': 'start_date', 'argument_value': '2021-05-01'}, {'argument_name': 'end_date', 'argument_value': '2021-05-14'}, {'argument_name': 'capacity', 'argument_value': 20}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'projectX' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'projectX'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint named Sprint 1 starting on 2021-01-01 and ending on 2021-01-14 with a capacity of 10",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item with ID 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the permissions of user1 for the 'admin' scope and 'manager' role",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'admin'}, {'argument_name': 'role', 'argument_value': 'manager'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in the Sales database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'Sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the effort required to complete a work item with ID 'work_item_123'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'work_item_123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items for user2 from the past week",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'one week ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user2'}, {'argument_name': 'work_type', 'argument_value': 'all'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the past month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-08-01'}, {'argument_name': 'end_date', 'argument_value': '2021-08-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for repository 'my-project' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my-project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assigned_to']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions of user1 for the project XYZ",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'XYZ'}, {'argument_name': 'role', 'argument_value': 'project'}, {'argument_name': 'resource', 'argument_value': 'permissions'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2020-01-01 and 2020-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2020-01-01'}, {'argument_name': 'end_date', 'argument_value': '2020-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'user1'}, {'argument_name': 'fields', 'argument_value': ['assigned_to']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'work_type', 'argument_value': ['work_item']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically update project dependencies for project XYZ",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'XYZ'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in HTML format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'HTML'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the new product launch",
        "answers": [
            "[{'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'New product launch discussion'}, {'argument_name': 'team_members', 'argument_value': ['marketing', 'sales', 'product development']}, {'argument_name': 'preferred_time', 'argument_value': '10:00 AM'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Fix bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that needs to be fixed.'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete a new work item titled 'Bug fix'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'description', 'argument_value': 'A bug fix for the latest release'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path 'my_project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'bugs', 'maintainability']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'bugs': 5, 'maintainability': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_smells', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_smells': 5, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes bug fixes and new features'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'user1' and 'user2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the status of work item 12345 to 'In Progress'",
        "answers": [
            "[{'tool_name': 'update_work_item_status', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'status', 'argument_value': 'In Progress'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report in PDF format and notify stakeholders",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.0'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[1]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate code reviews for changes made in repository 'my_project'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the project",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in project'}, {'argument_name': 'description', 'argument_value': 'A bug has been found in the project and needs to be tracked.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'created_by', 'created_on']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a high priority issue reported by user1",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'High Priority Issue'}, {'argument_name': 'description', 'argument_value': 'This ticket is for tracking a high priority issue reported by user1'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue with id 12345",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'New ticket for issue 12345'}, {'argument_name': 'description', 'argument_value': 'This ticket is created to track issue 12345'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_item'}, {'argument_name': 'role', 'argument_value': 'completed'}, {'argument_name': 'resource', 'argument_value': '2021-01-01:2021-06-30'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Automatically triage reported bugs based on severity and impact",
        "answers": [
            "[{'tool_name': 'bug_triage_helper', 'arguments': [{'argument_name': 'bug_reports', 'argument_value': ['Bug report 1', 'Bug report 2', 'Bug report 3']}, {'argument_name': 'priority_levels', 'argument_value': ['High', 'Medium', 'Low']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assess and categorize risks associated with different projects for a risk tolerance level of medium",
        "answers": [
            "[{'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': [{'project': 'Project A', 'risk': 'High'}, {'project': 'Project B', 'risk': 'Medium'}, {'project': 'Project C', 'risk': 'Low'}]}, {'argument_name': 'risk_tolerance', 'argument_value': 'medium'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'type', 'priority', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new sprint for project XYZ",
        "answers": [
            "[{'tool_name': 'create_new_sprint', 'arguments': [{'argument_name': 'sprint_name', 'argument_value': 'Sprint 1'}, {'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-14'}, {'argument_name': 'capacity', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1', 'user2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Update the dependencies of the project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': 'my_project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project at path '/home/user/project'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic complexity', 'code coverage', 'code duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic complexity': 10, 'code coverage': 80, 'code duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of high priority work items created by user1 in the past week",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'one week ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'high priority'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my-repo' since 2021-01-01 assigned to developers 'John' and 'Jane'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my-repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['John', 'Jane']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1 between 2021-01-01 and 2021-01-31",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'work item'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the repository 'my_repo'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'my_repo'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item 12345 and expand its description",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'description', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the past week",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': 'one week ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for a bug reported by user2",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug reported by user2'}, {'argument_name': 'description', 'argument_value': 'Bug reported by user2'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user2'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Assign work item 123 to user1 and get their permissions for the 'development' scope",
        "answers": [
            "[{'tool_name': 'assign_work_item', 'arguments': [{'argument_name': 'work_id', 'argument_value': '123'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}, {'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'development'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 2}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve work item details for work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.0",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments of ticket 1234 from the last 7 days",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '1234'}, {'argument_name': 'from_date', 'argument_value': '7 days ago'}, {'argument_name': 'to_date', 'argument_value': 'today'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a security audit report for the latest release",
        "answers": [
            "[{'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['latest release']}, {'argument_name': 'start_date', 'argument_value': 'today'}, {'argument_name': 'end_date', 'argument_value': 'today'}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].release_items[0]'}]}, {'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items created by user1 between 2021-01-01 and 2021-06-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'created'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the work item history of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my-repo' since 2021-01-01 assigned to developers 'dev1' and 'dev2'",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my-repo'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['dev1', 'dev2']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for tracking a bug in the project",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in project'}, {'argument_name': 'description', 'argument_value': 'A bug has been identified in the project and needs to be tracked.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'JohnDoe'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'bugs', 'duplications']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'bugs': 5, 'duplications': 3}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the details of work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'description', 'type', 'priority', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on the database named 'sales'",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item for the project 'Project X'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'New work item for Project X'}, {'argument_name': 'description', 'argument_value': 'This is a new work item for Project X'}, {'argument_name': 'type', 'argument_value': 'task'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user123'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with the title 'Bug fix' and assign it to user1",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug fix'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete a work item with ID 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a list of code reviews for the repository 'my_project' since 2021-01-01 assigned to user1",
        "answers": [
            "[{'tool_name': 'generate_code_reviews', 'arguments': [{'argument_name': 'repository', 'argument_value': 'my_project'}, {'argument_name': 'since_date', 'argument_value': '2021-01-01'}, {'argument_name': 'reviewers', 'argument_value': ['user1']}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the past month",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '1 month ago'}, {'argument_name': 'end_date', 'argument_value': 'today'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-05-01",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-05-01'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 in the last month",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'work_items'}, {'argument_name': 'role', 'argument_value': 'contributor'}, {'argument_name': 'resource', 'argument_value': 'completed'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['id', 'title', 'completed_date']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-01-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the work item with ID '12345'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['comments']}, {'argument_name': 'description', 'argument_value': False}, {'argument_name': 'revision', 'argument_value': 1}]}, {'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0].id'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['complexity', 'security', 'maintainability']}, {'argument_name': 'thresholds', 'argument_value': {'complexity': 10, 'security': 8, 'maintainability': 7}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Schedule a team meeting to discuss the upcoming product release",
        "answers": [
            "[{'tool_name': 'release_timeline_planner', 'arguments': [{'argument_name': 'release_items', 'argument_value': ['product launch', 'marketing campaign', 'feature updates']}, {'argument_name': 'start_date', 'argument_value': '2021-10-01'}, {'argument_name': 'end_date', 'argument_value': '2021-10-15'}]}, {'tool_name': 'schedule_team_meeting', 'arguments': [{'argument_name': 'meeting_purpose', 'argument_value': 'Discussion on upcoming product release'}, {'argument_name': 'team_members', 'argument_value': ['product manager', 'marketing lead', 'development team']}, {'argument_name': 'preferred_time', 'argument_value': '14:00'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the latest version of dependencies for project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'resolve_dependencies', 'arguments': [{'argument_name': 'project_path', 'argument_value': '/home/user/project'}, {'argument_name': 'dependency_file', 'argument_value': 'requirements.txt'}, {'argument_name': 'update_strategy', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "resolve_dependencies project_path",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'project_path', 'Tool Argument Description': 'The path to the project for which dependencies should be resolved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies dependency_file",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'dependency_file', 'Tool Argument Description': 'The file specifying project dependencies', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "resolve_dependencies update_strategy",
                "text": "{'Tool': 'resolve_dependencies', 'Tool Description': 'Resolves and updates dependencies in the project based on the latest available versions', 'Tool ArgumentName': 'update_strategy', 'Tool Argument Description': 'Strategy for updating dependencies (e.g., strict, latest)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance on database1",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'database1'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new work item with title 'Fix bug in login page' and description 'There is a bug in the login page that prevents users from logging in'",
        "answers": [
            "[{'tool_name': 'create_new_work_item', 'arguments': [{'argument_name': 'title', 'argument_value': 'Fix bug in login page'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login page that prevents users from logging in'}, {'argument_name': 'type', 'argument_value': 'bug'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket with title 'Bug in login page' and description 'Users are unable to login'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login page'}, {'argument_name': 'description', 'argument_value': 'Users are unable to login'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.3 of product X",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.3'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket for the issue 'Bug in login functionality'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login functionality'}, {'argument_name': 'description', 'argument_value': 'There is a bug in the login functionality that prevents users from logging in.'}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': 'user1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items completed by user1 between 2021-01-01 and 2021-06-30",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-06-30'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'completed'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project 'ProjectX'",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'ProjectX'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "bug_triage_helper bug_reports",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'bug_reports', 'Tool Argument Description': 'Array of bug report descriptions', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "bug_triage_helper priority_levels",
                "text": "{'Tool': 'bug_triage_helper', 'Tool Description': 'Automatically triages reported bugs based on severity and impact.', 'Tool ArgumentName': 'priority_levels', 'Tool Argument Description': 'List of priority levels to classify', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "schedule_team_meeting meeting_purpose",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'meeting_purpose', 'Tool Argument Description': 'The purpose or agenda of the team meeting', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting team_members",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'team_members', 'Tool Argument Description': 'List of team members who should attend the meeting', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "schedule_team_meeting preferred_time",
                "text": "{'Tool': 'schedule_team_meeting', 'Tool Description': 'Schedules a team meeting with relevant members based on availability and priorities', 'Tool ArgumentName': 'preferred_time', 'Tool Argument Description': 'Preferred time for the meeting', 'type': 'time'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Create a new ticket titled 'Bug in login feature' with priority 'high' and assign it to user with ID '1234'",
        "answers": [
            "[{'tool_name': 'create_new_ticket', 'arguments': [{'argument_name': 'title', 'argument_value': 'Bug in login feature'}, {'argument_name': 'description', 'argument_value': ''}, {'argument_name': 'priority', 'argument_value': 'high'}, {'argument_name': 'assignee_id', 'argument_value': '1234'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate the effort required to complete work item 12345",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Optimize database queries for better performance in the sales database",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'sales'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID '12345'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of work item with ID '12345'",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'type', 'priority', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the latest sales forecast for the technology industry",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': ['technology industry']}, {'argument_name': 'industry_focus', 'argument_value': ['technology']}]}, {'tool_name': 'sales_forecast_predictor', 'arguments': [{'argument_name': 'historical_sales_data', 'argument_value': '$$PREV[0]'}, {'argument_name': 'forecast_period', 'argument_value': 'latest'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor historical_sales_data",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'historical_sales_data', 'Tool Argument Description': 'Historical sales data', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "sales_forecast_predictor forecast_period",
                "text": "{'Tool': 'sales_forecast_predictor', 'Tool Description': 'Predicts sales forecasts based on historical data and current trends.', 'Tool ArgumentName': 'forecast_period', 'Tool Argument Description': 'Time period for the sales forecast', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_work_item title",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item description",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item type",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'type', 'Tool Argument Description': 'The type of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item priority",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_work_item assignee_id",
                "text": "{'Tool': 'create_new_work_item', 'Tool Description': 'Creates a new work item with the specified details', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Retrieve the comments and history of work item with ID 12345",
        "answers": [
            "[{'tool_name': 'get_work_item_comments', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}, {'tool_name': 'get_work_item_history', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_code_reviews repository",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'repository', 'Tool Argument Description': 'The name of the repository for which code reviews are generated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews since_date",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'since_date', 'Tool Argument Description': 'Filters code reviews based on changes made since this date', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "generate_code_reviews reviewers",
                "text": "{'Tool': 'generate_code_reviews', 'Tool Description': 'Generates a list of code reviews based on the changes made in the repository.', 'Tool ArgumentName': 'reviewers', 'Tool Argument Description': 'List of developers assigned to review the code', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 1.2.3",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '1.2.3', 'release_notes': 'Bug fixes and performance improvements'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_sprint sprint_name",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'sprint_name', 'Tool Argument Description': 'The name of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint start_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint end_date",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date of the new sprint', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_sprint capacity",
                "text": "{'Tool': 'create_new_sprint', 'Tool Description': 'Creates a new sprint for managing work items', 'Tool ArgumentName': 'capacity', 'Tool Argument Description': 'The capacity of the new sprint', 'type': 'integer(int32)'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the comments of the ticket with ID 12345 from 01/01/2021 to 01/31/2021",
        "answers": [
            "[{'tool_name': 'get_ticket_comments', 'arguments': [{'argument_name': 'ticket_id', 'argument_value': '12345'}, {'argument_name': 'from_date', 'argument_value': '01/01/2021'}, {'argument_name': 'to_date', 'argument_value': '01/31/2021'}, {'argument_name': 'limit', 'argument_value': 10}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_ticket_comments ticket_id",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve comments', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments from_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'from_date', 'Tool Argument Description': 'The start date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments to_date",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'to_date', 'Tool Argument Description': 'The end date for the comments retrieval', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_ticket_comments limit",
                "text": "{'Tool': 'get_ticket_comments', 'Tool Description': 'Returns the comments of a specific ticket', 'Tool ArgumentName': 'limit', 'Tool Argument Description': 'The maximum number of comments to return', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Estimate effort for work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'",
        "answers": [
            "[{'tool_name': 'estimate_effort_for_work_item', 'arguments': [{'argument_name': 'work_item_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "estimate_effort_for_work_item work_item_id",
                "text": "{'Tool': 'estimate_effort_for_work_item', 'Tool Description': 'Estimates the effort required to complete a given work item', 'Tool ArgumentName': 'work_item_id', 'Tool Argument Description': 'The ID of the work item for which to estimate effort', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report on the code quality of the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project_path'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}, {'tool_name': 'generate_report', 'arguments': [{'argument_name': 'report_type', 'argument_value': 'PDF'}, {'argument_name': 'metrics', 'argument_value': '$$PREV[0]'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the average code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['average']}, {'argument_name': 'thresholds', 'argument_value': {'average': 80}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "release_timeline_planner release_items",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'release_items', 'Tool Argument Description': 'List of items scheduled for release', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner start_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'Start date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "release_timeline_planner end_date",
                "text": "{'Tool': 'release_timeline_planner', 'Tool Description': 'Helps in planning and visualizing product release timelines.', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'End date of the release cycle', 'type': 'date'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the project at path /home/user/project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate the code quality metrics for the codebase at path /home/user/myproject",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': '/home/user/myproject'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_duplication']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_duplication': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "backup_and_restore_manager data_to_backup",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'data_to_backup', 'Tool Argument Description': 'List of critical data to be included in the backup', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "backup_and_restore_manager backup_schedule",
                "text": "{'Tool': 'backup_and_restore_manager', 'Tool Description': 'Manages backup and restore processes for critical data', 'Tool ArgumentName': 'backup_schedule', 'Tool Argument Description': 'Schedule for automated backup execution', 'type': 'cron expression'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code quality metrics for project XYZ",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'XYZ'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['cyclomatic_complexity', 'code_coverage', 'code_smells']}, {'argument_name': 'thresholds', 'argument_value': {'cyclomatic_complexity': 10, 'code_coverage': 80, 'code_smells': 5}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "assign_work_item work_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "assign_work_item assignee_id",
                "text": "{'Tool': 'assign_work_item', 'Tool Description': 'Assigns a work item to a specific user', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the work item is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of a specific work item",
        "answers": [
            "[{'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'status', 'assignee', 'created_by', 'created_date']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 1}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.1.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.1.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'This version includes new features and bug fixes.'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "update_work_item_status work_id",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item to be updated', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "update_work_item_status status",
                "text": "{'Tool': 'update_work_item_status', 'Tool Description': 'Updates the status of a specific work item', 'Tool ArgumentName': 'status', 'Tool Argument Description': 'The new status of the work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Calculate code health for the project",
        "answers": [
            "[{'tool_name': 'calculate_code_quality_metrics', 'arguments': [{'argument_name': 'codebase_path', 'argument_value': 'project'}, {'argument_name': 'metrics_to_calculate', 'argument_value': ['health']}, {'argument_name': 'thresholds', 'argument_value': {'health': 'high'}}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "calculate_code_quality_metrics codebase_path",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'codebase_path', 'Tool Argument Description': 'The path to the codebase for which metrics are calculated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics metrics_to_calculate",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'metrics_to_calculate', 'Tool Argument Description': 'List of specific code quality metrics to be calculated', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "calculate_code_quality_metrics thresholds",
                "text": "{'Tool': 'calculate_code_quality_metrics', 'Tool Description': 'Calculates various code quality metrics for a given codebase', 'Tool ArgumentName': 'thresholds', 'Tool Argument Description': 'Thresholds for determining code health', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "create_new_ticket title",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'title', 'Tool Argument Description': 'The title of the ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket description",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'The description of the new ticket', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket priority",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'priority', 'Tool Argument Description': 'TThe priority of the new work item', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "create_new_ticket assignee_id",
                "text": "{'Tool': 'create_new_ticket', 'Tool Description': 'Creates a new ticket for tracking issues or requests', 'Tool ArgumentName': 'assignee_id', 'Tool Argument Description': 'The ID of the user to whom the t is assigned', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the permissions for user1 on the project Project1",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'scope', 'argument_value': 'Project1'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_ticket_details ticket_id",
                "text": "{'Tool': 'get_ticket_details', 'Tool Description': 'Returns the details of a specific ticket', 'Tool ArgumentName': 'ticket_id', 'Tool Argument Description': 'The ID of the ticket for which you want to retrieve details', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a comprehensive security audit report for project XYZ",
        "answers": [
            "[{'tool_name': 'security_audit_manager', 'arguments': [{'argument_name': 'audit_level', 'argument_value': 'comprehensive'}, {'argument_name': 'report_format', 'argument_value': 'PDF'}, {'argument_name': 'notify_stakeholders', 'argument_value': True}]}, {'tool_name': 'risk_assessment_analyzer', 'arguments': [{'argument_name': 'project_risks', 'argument_value': ['XYZ']}, {'argument_name': 'risk_tolerance', 'argument_value': 'high'}]}, {'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2021-01-01'}, {'argument_name': 'end_date', 'argument_value': '2021-12-31'}, {'argument_name': 'user_id', 'argument_value': 'admin'}, {'argument_name': 'work_type', 'argument_value': 'security'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "security_audit_manager audit_level",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'audit_level', 'Tool Argument Description': 'Level of the security audit (e.g., basic, comprehensive)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager report_format",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'report_format', 'Tool Argument Description': 'Format for the audit report (e.g., PDF, HTML)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "security_audit_manager notify_stakeholders",
                "text": "{'Tool': 'security_audit_manager', 'Tool Description': 'Manages and conducts security audits on the codebase', 'Tool ArgumentName': 'notify_stakeholders', 'Tool Argument Description': 'Flag to notify stakeholders on audit completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer project_risks",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'project_risks', 'Tool Argument Description': 'Data about potential risks in projects', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "risk_assessment_analyzer risk_tolerance",
                "text": "{'Tool': 'risk_assessment_analyzer', 'Tool Description': 'Assesses and categorizes risks associated with different projects.', 'Tool ArgumentName': 'risk_tolerance', 'Tool Argument Description': 'Level of risk tolerance', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Notify stakeholders about the upcoming deployment of version 2.0",
        "answers": [
            "[{'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': {'version': '2.0', 'release_notes': 'New features and bug fixes'}}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2', 'stakeholder3']}, {'argument_name': 'notify_on_completion', 'argument_value': False}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 2.0 of product XYZ",
        "answers": [
            "[{'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_history work_id",
                "text": "{'Tool': 'get_work_item_history', 'Tool Description': 'Retrieves the history of changes made to a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve history', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the current market trends for the tech industry and notify relevant stakeholders",
        "answers": [
            "[{'tool_name': 'market_trend_analyzer', 'arguments': [{'argument_name': 'market_data', 'argument_value': 'tech'}, {'argument_name': 'industry_focus', 'argument_value': 'tech'}]}, {'tool_name': 'notify_deployments', 'arguments': [{'argument_name': 'deployment_info', 'argument_value': '$$PREV[0]'}, {'argument_name': 'notification_list', 'argument_value': ['stakeholder1', 'stakeholder2']}, {'argument_name': 'notify_on_completion', 'argument_value': True}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "market_trend_analyzer market_data",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'market_data', 'Tool Argument Description': 'Data about current market trends', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "market_trend_analyzer industry_focus",
                "text": "{'Tool': 'market_trend_analyzer', 'Tool Description': 'Analyzes market trends to inform strategic decisions.', 'Tool ArgumentName': 'industry_focus', 'Tool Argument Description': 'Specific industry to focus the analysis on', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments deployment_info",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'deployment_info', 'Tool Argument Description': 'Information about the deployment, including version and release notes', 'type': 'object'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notification_list",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notification_list', 'Tool Argument Description': 'List of stakeholders to be notified', 'type': 'array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "notify_deployments notify_on_completion",
                "text": "{'Tool': 'notify_deployments', 'Tool Description': 'Notifies relevant stakeholders about upcoming or completed deployments', 'Tool ArgumentName': 'notify_on_completion', 'Tool Argument Description': 'Flag to determine whether to notify on completion', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Identify key topics and common themes in customer feedback with a sentiment threshold of 0.5",
        "answers": [
            "[{'tool_name': 'analyze_customer_feedback', 'arguments': [{'argument_name': 'feedback_data', 'argument_value': ['customer1_feedback', 'customer2_feedback']}, {'argument_name': 'sentiment_threshold', 'argument_value': [0.5]}, {'argument_name': 'topic_modeling', 'argument_value': [True]}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "analyze_customer_feedback feedback_data",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'feedback_data', 'Tool Argument Description': 'List of customer feedback entries to be analyzed', 'type': 'array of objects'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback sentiment_threshold",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'sentiment_threshold', 'Tool Argument Description': 'Threshold for considering feedback as positive or negative', 'type': 'float'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "analyze_customer_feedback topic_modeling",
                "text": "{'Tool': 'analyze_customer_feedback', 'Tool Description': 'Analyzes customer feedback to identify common themes and areas for improvement', 'Tool ArgumentName': 'topic_modeling', 'Tool Argument Description': 'Apply topic modeling to identify key topics in the feedback', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "get_work_item_comments work_id",
                "text": "{'Tool': 'get_work_item_comments', 'Tool Description': 'Retrieves the comments associated with a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve comments', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Get the details of a work item with an optimized database query",
        "answers": [
            "[{'tool_name': 'optimize_database_queries', 'arguments': [{'argument_name': 'database_name', 'argument_value': 'my_database_name'}, {'argument_name': 'query_analysis_level', 'argument_value': 'advanced'}, {'argument_name': 'optimize_strategy', 'argument_value': 'index optimization'}]}, {'tool_name': 'get_work_item_details', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}, {'argument_name': 'fields', 'argument_value': ['title', 'description', 'assignee_id']}, {'argument_name': 'description', 'argument_value': True}, {'argument_name': 'revision', 'argument_value': 3}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "optimize_database_queries database_name",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'database_name', 'Tool Argument Description': 'The name of the database to be optimized', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries query_analysis_level",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'query_analysis_level', 'Tool Argument Description': 'Level of analysis to be performed on queries (e.g., basic, advanced)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "optimize_database_queries optimize_strategy",
                "text": "{'Tool': 'optimize_database_queries', 'Tool Description': 'Analyzes and optimizes database queries for better performance', 'Tool ArgumentName': 'optimize_strategy', 'Tool Argument Description': 'Strategy for optimizing queries (e.g., index optimization)', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details work_id",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'work_id', 'Tool Argument Description': 'The ID of the work item for which you want to retrieve details', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details fields",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'fields', 'Tool Argument Description': 'The fields to be included in the details', 'type': 'an array of strings'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details description",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'description', 'Tool Argument Description': 'Expands the details of the work item', 'type': 'boolean'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_work_item_details revision",
                "text": "{'Tool': 'get_work_item_details', 'Tool Description': 'Returns the details of a specific work item', 'Tool ArgumentName': 'revision', 'Tool Argument Description': 'The revision number of the work item', 'type': 'integer(int32)'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "deployment_automation_manager deployment_scripts",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'deployment_scripts', 'Tool Argument Description': 'Scripts for automating deployment', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "deployment_automation_manager environment",
                "text": "{'Tool': 'deployment_automation_manager', 'Tool Description': 'Automates and manages the software deployment process.', 'Tool ArgumentName': 'environment', 'Tool Argument Description': 'Deployment environment', 'type': 'string'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate a report of work items assigned to user1",
        "answers": [
            "[{'tool_name': 'generate_work_report', 'arguments': [{'argument_name': 'start_date', 'argument_value': '2020-01-01'}, {'argument_name': 'end_date', 'argument_value': '2020-12-31'}, {'argument_name': 'user_id', 'argument_value': 'user1'}, {'argument_name': 'work_type', 'argument_value': 'task'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "generate_work_report start_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'start_date', 'Tool Argument Description': 'The start date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report end_date",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'end_date', 'Tool Argument Description': 'The end date for the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report user_id",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for whom the report is generated', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_work_report work_type",
                "text": "{'Tool': 'generate_work_report', 'Tool Description': 'Generates a report of work items based on specified criteria', 'Tool ArgumentName': 'work_type', 'Tool Argument Description': 'The type of work items to include in the report', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    },
    {
        "dataset": "finetune",
        "question": "Generate release notes for version 1.2.0",
        "answers": [
            "[{'tool_name': 'get_user_permissions', 'arguments': [{'argument_name': 'user_id', 'argument_value': 'admin'}, {'argument_name': 'scope', 'argument_value': 'product'}, {'argument_name': 'role', 'argument_value': 'owner'}, {'argument_name': 'resource', 'argument_value': 'releases'}]}, {'tool_name': 'generate_release_notes', 'arguments': [{'argument_name': 'product_version', 'argument_value': '1.2.0'}]}]"
        ],
        "positive_ctxs": [
            {
                "title": "get_user_permissions user_id",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'user_id', 'Tool Argument Description': 'The ID of the user for which you want to retrieve permissions', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions scope",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'scope', 'Tool Argument Description': 'The scope for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions role",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'role', 'Tool Argument Description': 'The role for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "get_user_permissions resource",
                "text": "{'Tool': 'get_user_permissions', 'Tool Description': 'Returns the permissions of a specific user', 'Tool ArgumentName': 'resource', 'Tool Argument Description': 'The resource for which the permissions are to be retrieved', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            },
            {
                "title": "generate_release_notes product_version",
                "text": "{'Tool': 'generate_release_notes', 'Tool Description': 'Generates release notes for a given product version', 'Tool ArgumentName': 'product_version', 'Tool Argument Description': 'The version of the product for which to generate release notes', 'type': 'string'}",
                "score": 10000,
                "title_score": 1,
                "passage_id": 12345
            }
        ],
        "negative_ctxs": [],
        "hard_negative_ctxs": [
            {
                "title": "customer_journey_mapper customer_data",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'customer_data', 'Tool Argument Description': 'Data about customers and their interactions', 'type': 'array of objects'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            },
            {
                "title": "customer_journey_mapper journey_stages",
                "text": "{'Tool': 'customer_journey_mapper', 'Tool Description': 'Maps customer journeys to understand and improve customer experience.', 'Tool ArgumentName': 'journey_stages', 'Tool Argument Description': 'Stages in the customer journey to map', 'type': 'array of strings'}",
                "score": 10,
                "title_score": -1,
                "passage_id": 1234
            }
        ]
    }
]